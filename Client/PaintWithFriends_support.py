#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 4.12
# In conjunction with Tcl version 8.6
#    Apr 09, 2018 06:06:13 PM


import sys
import threading
from socket import *
import pickle
import ChatClient as clientClass

try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True


color = "black"     #default color
thicc = 1           #default thiccness
toolType = 1        #default line
spinbox = 1
client = clientClass.Client()


def send():
    global client
    while client.isClientConnected:
        if client.toSend != "":
            client.send(client.toSend.encode('utf8'))
            client.toSend = ""

def receive():
    global client, top_level, w, root
    while client.isClientConnected:
        message = client.receive()
        # print(message)
        commands = message.split("$")
        for command in commands:
            if command != "" and command != "\n":
                args = command.split("|")
                tool = args[0]
                xold = int(args[1])
                yold = int(args[2])
                eventx = int(args[3])
                eventy = int(args[4])
                color = args[5]
                thick = int(args[6])
                if(tool == "Line"):
                    w.Canvas1.create_line(xold, yold, eventx, eventy, smooth=TRUE, fill=color, width=thick)
                elif (tool == "Circle"):
                    w.Canvas1.create_oval(eventx - thick, eventy - thick, eventx + thick, eventy + thick, fill=color, width = "0")

def set_Tk_var():
    global spinbox
    spinbox = StringVar()

def lineTool():
    global toolType
    toolType = 1
    print('PaintWithFriends_support.lineTool')
    sys.stdout.flush()

def circleTool():
    global toolType
    toolType = 2
    print('PaintWithFriends_support.circleTool')
    sys.stdout.flush()

def changeRed():
    global color
    color = "red"
    print('PaintWithFriends_support.changeRed')
    sys.stdout.flush()

def changeBlack():
    global color
    color = "black"
    print('PaintWithFriends_support.changeBlack')
    sys.stdout.flush()

def changeBlue():
    global color
    color = "blue"
    print('PaintWithFriends_support.changeBlue')
    sys.stdout.flush()

def changeWhite():
    global color
    color = "white"
    print('PaintWithFriends_support.changeWhite')
    sys.stdout.flush()

def changeGreen():
    global color
    color = "#00ff00"
    print('PaintWithFriends_support.changeGreen')
    sys.stdout.flush()

def changeYellow():
    global color
    color = "yellow"
    print('PaintWithFriends_support.changeYellow')
    sys.stdout.flush()

def scaleSize(*args): 
    global thicc
    print('PaintWithFriends_support.scaleSize')
    thicc = int(args[0])
    sys.stdout.flush()

def connect():
    print('PaintWithFriends_support.connect')
    global client
    if client.isClientConnected:
        print('Already connected!')
    else:
        client.connect('localhost',50000)
        sendThread = threading.Thread(target=send)
        recvThread = threading.Thread(target=receive)
        sendThread.start()
        recvThread.start()
    sys.stdout.flush()

def quit():
    print('PaintWithFriends_support.quit')
    client.disconnect()
    sys.stdout.flush()

def init(top, gui, *args, **kwargs):
    global w, top_level, root
    w = gui
    top_level = top
    root = top

def destroy_window():
    # Function which closes the window.
    global top_level
    top_level = None


if __name__ == '__main__':
    import PaintWithFriends
    PaintWithFriends.vp_start_gui()
    #main()

